# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import srv6pmCommons_pb2 as srv6pmCommons__pb2
import srv6pmSender_pb2 as srv6pmSender__pb2


class SRv6PMSenderStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.startExperiment = channel.unary_unary(
                '/srv6pm.SRv6PMSender/startExperiment',
                request_serializer=srv6pmSender__pb2.StartExperimentSenderRequest.SerializeToString,
                response_deserializer=srv6pmSender__pb2.StartExperimentSenderReply.FromString,
                )
        self.stopExperiment = channel.unary_unary(
                '/srv6pm.SRv6PMSender/stopExperiment',
                request_serializer=srv6pmCommons__pb2.StopExperimentRequest.SerializeToString,
                response_deserializer=srv6pmCommons__pb2.StopExperimentReply.FromString,
                )
        self.retriveExperimentResults = channel.unary_unary(
                '/srv6pm.SRv6PMSender/retriveExperimentResults',
                request_serializer=srv6pmCommons__pb2.RetriveExperimentDataRequest.SerializeToString,
                response_deserializer=srv6pmCommons__pb2.ExperimentDataResponse.FromString,
                )


class SRv6PMSenderServicer(object):
    """Missing associated documentation comment in .proto file"""

    def startExperiment(self, request, context):
        """start an experiment
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stopExperiment(self, request, context):
        """stop am experiment
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def retriveExperimentResults(self, request, context):
        """retrive data of an experiment
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SRv6PMSenderServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'startExperiment': grpc.unary_unary_rpc_method_handler(
                    servicer.startExperiment,
                    request_deserializer=srv6pmSender__pb2.StartExperimentSenderRequest.FromString,
                    response_serializer=srv6pmSender__pb2.StartExperimentSenderReply.SerializeToString,
            ),
            'stopExperiment': grpc.unary_unary_rpc_method_handler(
                    servicer.stopExperiment,
                    request_deserializer=srv6pmCommons__pb2.StopExperimentRequest.FromString,
                    response_serializer=srv6pmCommons__pb2.StopExperimentReply.SerializeToString,
            ),
            'retriveExperimentResults': grpc.unary_unary_rpc_method_handler(
                    servicer.retriveExperimentResults,
                    request_deserializer=srv6pmCommons__pb2.RetriveExperimentDataRequest.FromString,
                    response_serializer=srv6pmCommons__pb2.ExperimentDataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'srv6pm.SRv6PMSender', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SRv6PMSender(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def startExperiment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/srv6pm.SRv6PMSender/startExperiment',
            srv6pmSender__pb2.StartExperimentSenderRequest.SerializeToString,
            srv6pmSender__pb2.StartExperimentSenderReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def stopExperiment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/srv6pm.SRv6PMSender/stopExperiment',
            srv6pmCommons__pb2.StopExperimentRequest.SerializeToString,
            srv6pmCommons__pb2.StopExperimentReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def retriveExperimentResults(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/srv6pm.SRv6PMSender/retriveExperimentResults',
            srv6pmCommons__pb2.RetriveExperimentDataRequest.SerializeToString,
            srv6pmCommons__pb2.ExperimentDataResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
