# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import srv6pmCommons_pb2 as srv6pmCommons__pb2
import srv6pmReflector_pb2 as srv6pmReflector__pb2
import srv6pmSender_pb2 as srv6pmSender__pb2


class SRv6PMStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.setConfiguration = channel.unary_unary(
                '/srv6pm.SRv6PM/setConfiguration',
                request_serializer=srv6pmCommons__pb2.Configuration.SerializeToString,
                response_deserializer=srv6pmCommons__pb2.SetConfigurationReply.FromString,
                )
        self.resetConfiguration = channel.unary_unary(
                '/srv6pm.SRv6PM/resetConfiguration',
                request_serializer=srv6pmCommons__pb2.Configuration.SerializeToString,
                response_deserializer=srv6pmCommons__pb2.SetConfigurationReply.FromString,
                )
        self.startExperimentSender = channel.unary_unary(
                '/srv6pm.SRv6PM/startExperimentSender',
                request_serializer=srv6pmSender__pb2.StartExperimentSenderRequest.SerializeToString,
                response_deserializer=srv6pmSender__pb2.StartExperimentSenderReply.FromString,
                )
        self.startExperimentReflector = channel.unary_unary(
                '/srv6pm.SRv6PM/startExperimentReflector',
                request_serializer=srv6pmReflector__pb2.StartExperimentReflectorRequest.SerializeToString,
                response_deserializer=srv6pmReflector__pb2.StartExperimentReflectorReply.FromString,
                )
        self.stopExperimentSender = channel.unary_unary(
                '/srv6pm.SRv6PM/stopExperimentSender',
                request_serializer=srv6pmCommons__pb2.StopExperimentRequest.SerializeToString,
                response_deserializer=srv6pmCommons__pb2.StopExperimentReply.FromString,
                )
        self.stopExperimentReflector = channel.unary_unary(
                '/srv6pm.SRv6PM/stopExperimentReflector',
                request_serializer=srv6pmCommons__pb2.StopExperimentRequest.SerializeToString,
                response_deserializer=srv6pmCommons__pb2.StopExperimentReply.FromString,
                )
        self.retriveExperimentResults = channel.unary_unary(
                '/srv6pm.SRv6PM/retriveExperimentResults',
                request_serializer=srv6pmCommons__pb2.RetriveExperimentDataRequest.SerializeToString,
                response_deserializer=srv6pmCommons__pb2.ExperimentDataResponse.FromString,
                )


class SRv6PMServicer(object):
    """Missing associated documentation comment in .proto file"""

    def setConfiguration(self, request, context):
        """Set configuration
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def resetConfiguration(self, request, context):
        """Reset configuration
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def startExperimentSender(self, request, context):
        """start an experiment Sender
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def startExperimentReflector(self, request, context):
        """start an experiment Reflector
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stopExperimentSender(self, request, context):
        """stop an experiment
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stopExperimentReflector(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def retriveExperimentResults(self, request, context):
        """retrive data of an experiment
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SRv6PMServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'setConfiguration': grpc.unary_unary_rpc_method_handler(
                    servicer.setConfiguration,
                    request_deserializer=srv6pmCommons__pb2.Configuration.FromString,
                    response_serializer=srv6pmCommons__pb2.SetConfigurationReply.SerializeToString,
            ),
            'resetConfiguration': grpc.unary_unary_rpc_method_handler(
                    servicer.resetConfiguration,
                    request_deserializer=srv6pmCommons__pb2.Configuration.FromString,
                    response_serializer=srv6pmCommons__pb2.SetConfigurationReply.SerializeToString,
            ),
            'startExperimentSender': grpc.unary_unary_rpc_method_handler(
                    servicer.startExperimentSender,
                    request_deserializer=srv6pmSender__pb2.StartExperimentSenderRequest.FromString,
                    response_serializer=srv6pmSender__pb2.StartExperimentSenderReply.SerializeToString,
            ),
            'startExperimentReflector': grpc.unary_unary_rpc_method_handler(
                    servicer.startExperimentReflector,
                    request_deserializer=srv6pmReflector__pb2.StartExperimentReflectorRequest.FromString,
                    response_serializer=srv6pmReflector__pb2.StartExperimentReflectorReply.SerializeToString,
            ),
            'stopExperimentSender': grpc.unary_unary_rpc_method_handler(
                    servicer.stopExperimentSender,
                    request_deserializer=srv6pmCommons__pb2.StopExperimentRequest.FromString,
                    response_serializer=srv6pmCommons__pb2.StopExperimentReply.SerializeToString,
            ),
            'stopExperimentReflector': grpc.unary_unary_rpc_method_handler(
                    servicer.stopExperimentReflector,
                    request_deserializer=srv6pmCommons__pb2.StopExperimentRequest.FromString,
                    response_serializer=srv6pmCommons__pb2.StopExperimentReply.SerializeToString,
            ),
            'retriveExperimentResults': grpc.unary_unary_rpc_method_handler(
                    servicer.retriveExperimentResults,
                    request_deserializer=srv6pmCommons__pb2.RetriveExperimentDataRequest.FromString,
                    response_serializer=srv6pmCommons__pb2.ExperimentDataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'srv6pm.SRv6PM', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SRv6PM(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def setConfiguration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/srv6pm.SRv6PM/setConfiguration',
            srv6pmCommons__pb2.Configuration.SerializeToString,
            srv6pmCommons__pb2.SetConfigurationReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def resetConfiguration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/srv6pm.SRv6PM/resetConfiguration',
            srv6pmCommons__pb2.Configuration.SerializeToString,
            srv6pmCommons__pb2.SetConfigurationReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def startExperimentSender(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/srv6pm.SRv6PM/startExperimentSender',
            srv6pmSender__pb2.StartExperimentSenderRequest.SerializeToString,
            srv6pmSender__pb2.StartExperimentSenderReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def startExperimentReflector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/srv6pm.SRv6PM/startExperimentReflector',
            srv6pmReflector__pb2.StartExperimentReflectorRequest.SerializeToString,
            srv6pmReflector__pb2.StartExperimentReflectorReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def stopExperimentSender(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/srv6pm.SRv6PM/stopExperimentSender',
            srv6pmCommons__pb2.StopExperimentRequest.SerializeToString,
            srv6pmCommons__pb2.StopExperimentReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def stopExperimentReflector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/srv6pm.SRv6PM/stopExperimentReflector',
            srv6pmCommons__pb2.StopExperimentRequest.SerializeToString,
            srv6pmCommons__pb2.StopExperimentReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def retriveExperimentResults(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/srv6pm.SRv6PM/retriveExperimentResults',
            srv6pmCommons__pb2.RetriveExperimentDataRequest.SerializeToString,
            srv6pmCommons__pb2.ExperimentDataResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
